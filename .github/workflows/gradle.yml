# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set up secret Key
      shell: bash
      env:
        SECRETS_DB_Test: ${{secrets.MYSQL_TEST}}
      run: |
        mkdir src/test/resources -p
        touch src/test/resources/application.yml
        echo $SECRETS_DB_Test > test_enc.txt
        cat test_enc.txt | base64 -d > src/test/resources/application.yml

    - name: Setup MySQL
      uses: samin/mysql-action@v1
      with:
        character set server: 'utf8'
        mysql database: 'koonsdiary'
        mysql user: 'koonda'
        mysql password: ${{ secrets.MYSQL_PASSWORD }}
      
    - name: Build with Gradle
      run: ./gradlew build -x test
      
    - name: Test with Gradle
      run: ./gradlew test

    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy

    # jar 파일 카피
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

    # 압축 파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./KoonsDiary-Spring.zip ./deploy

    # S3 버킷으로 copy
    - name: Check to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 ls

#    - name: Deliver to AWS S3
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        run: |
#        aws s3 cp \
#        --region ap-northeast-2 \
#        --acl private \
#        ./KoonsDiary-Spring.zip s3://koonsdiary/KoonsDiary-Spring.zip



      
